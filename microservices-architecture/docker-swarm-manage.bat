@echo off
echo üê≥ Docker Swarm Management –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
echo ================================================

if "%1"=="" (
    echo.
    echo –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: docker-swarm-manage.bat [–∫–æ–º–∞–Ω–¥–∞]
    echo.
    echo –ö–æ–º–∞–Ω–¥—ã:
    echo   init       - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Docker Swarm
    echo   deploy     - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å—Ç–µ–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo   update     - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo   scale      - –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo   status     - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
    echo   logs       - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
    echo   stop       - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–µ–∫–∞
    echo   leave      - –í—ã—Ö–æ–¥ –∏–∑ Swarm
    echo   build      - –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è Swarm
    echo.
    exit /b 1
)

set STACK_NAME=tutor-platform

if "%1"=="init" (
    echo üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Docker Swarm...
    docker swarm init --advertise-addr 127.0.0.1
    if %errorlevel% neq 0 (
        echo ‚ö†Ô∏è  Swarm —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞
    ) else (
        echo ‚úÖ Docker Swarm –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    )
    
    echo.
    echo üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Swarm:
    docker node ls
    
    echo.
    echo üåê –°–æ–∑–¥–∞–Ω–∏–µ overlay —Å–µ—Ç–∏...
    docker network create --driver overlay tutor-platform-network 2>nul || echo "–°–µ—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    goto :end
)

if "%1"=="build" (
    echo üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è Docker Swarm...
    
    echo –°–±–æ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
    docker build -t tutor-main-app:latest .
    
    echo –°–±–æ—Ä–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...
    docker build -t tutor-notification-service:latest ./microservices/notification-service
    
    echo –°–±–æ—Ä–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...
    docker build -t tutor-analytics-service:latest ./microservices/analytics-service
    
    echo ‚úÖ –í—Å–µ –æ–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã
    echo.
    echo üìã –°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–∑–æ–≤:
    docker images | findstr tutor-
    
    goto :end
)

if "%1"=="deploy" (
    echo üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å—Ç–µ–∫–∞ –≤ Docker Swarm...
    
    rem –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Swarm –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    docker node ls >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ùå Docker Swarm –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-swarm-manage.bat init
        exit /b 1
    )
    
    docker stack deploy -c docker-compose.swarm.yml %STACK_NAME%
    
    echo ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...
    timeout /t 30 /nobreak >nul
    
    echo.
    echo üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:
    docker stack services %STACK_NAME%
    
    goto :end
)

if "%1"=="update" (
    echo üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤...
    
    if "%2"=="" (
        echo –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...
        docker service update --force %STACK_NAME%_main-app
        docker service update --force %STACK_NAME%_notification-service
        docker service update --force %STACK_NAME%_analytics-service
        docker service update --force %STACK_NAME%_nginx
    ) else (
        echo –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ %2...
        docker service update --force %STACK_NAME%_%2
    )
    
    goto :end
)

if "%1"=="scale" (
    if "%2"=="" (
        echo ‚ùå –£–∫–∞–∂–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
        echo –ü—Ä–∏–º–µ—Ä: docker-swarm-manage.bat scale main-app 3
        exit /b 1
    )
    
    if "%3"=="" (
        echo ‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–ø–ª–∏–∫
        exit /b 1
    )
    
    echo üìà –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ %2 –¥–æ %3 —Ä–µ–ø–ª–∏–∫...
    docker service scale %STACK_NAME%_%2=%3
    
    goto :end
)

if "%1"=="status" (
    echo üìä –°—Ç–∞—Ç—É—Å Docker Swarm:
    echo.
    
    echo üîó –£–∑–ª—ã –∫–ª–∞—Å—Ç–µ—Ä–∞:
    docker node ls
    
    echo.
    echo üìã –°–µ—Ä–≤–∏—Å—ã —Å—Ç–µ–∫–∞:
    docker stack services %STACK_NAME%
    
    echo.
    echo üîÑ –ü—Ä–æ—Ü–µ—Å—Å—ã —Å–µ—Ä–≤–∏—Å–æ–≤:
    docker stack ps %STACK_NAME% --no-trunc
    
    echo.
    echo üåê –°–µ—Ç–∏:
    docker network ls | findstr overlay
    
    goto :end
)

if "%1"=="logs" (
    if "%2"=="" (
        echo üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:
        docker stack services %STACK_NAME% --format "table {{.Name}}"
        echo.
        echo –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: docker-swarm-manage.bat logs [service-name]
        exit /b 1
    )
    
    echo üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ %2:
    docker service logs -f %STACK_NAME%_%2
    
    goto :end
)

if "%1"=="stop" (
    echo üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–µ–∫–∞ %STACK_NAME%...
    docker stack rm %STACK_NAME%
    
    echo ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...
    timeout /t 15 /nobreak >nul
    
    echo ‚úÖ –°—Ç–µ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    
    goto :end
)

if "%1"=="leave" (
    echo ‚ö†Ô∏è  –í—ã—Ö–æ–¥ –∏–∑ Docker Swarm (—ç—Ç–æ —É–¥–∞–ª–∏—Ç –≤–µ—Å—å –∫–ª–∞—Å—Ç–µ—Ä!)
    echo –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏–ª–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...
    pause >nul
    
    docker swarm leave --force
    echo ‚úÖ –í—ã—à–ª–∏ –∏–∑ Docker Swarm
    
    goto :end
)

echo ‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: %1

:end
echo.
echo üåê –ü–æ–ª–µ–∑–Ω—ã–µ URL (–µ—Å–ª–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ):
echo   - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost
echo   - Nginx —Å—Ç–∞—Ç—É—Å: http://localhost/nginx-status  
echo   - Portainer: http://localhost:9000
echo   - Health check: http://localhost/health
echo.