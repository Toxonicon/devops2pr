# Многоэтапная сборка для production
# Этап 1: Сборка зависимостей
FROM node:18-alpine AS dependencies

WORKDIR /app

# Копируем файлы зависимостей
COPY package*.json ./

# Устанавливаем все зависимости (включая dev для сборки)
RUN npm ci

# Этап 2: Production образ
FROM node:18-alpine AS production

# Метаданные
LABEL maintainer="DevOps Student"
LABEL version="1.0.0"
LABEL description="Analytics Microservice for Tutor-Student Platform (Production)"

# Устанавливаем рабочую директорию
WORKDIR /app

# Создаем пользователя для безопасности
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodeuser -u 1001

# Копируем только production зависимости из первого этапа
COPY package*.json ./
RUN npm ci --only=production && \
    npm cache clean --force

# Копируем исходный код
COPY . .

# Изменяем владельца файлов
RUN chown -R nodeuser:nodejs /app
USER nodeuser

# Открываем порт
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "const http = require('http'); \
    const options = { hostname: 'localhost', port: 3002, path: '/health', method: 'GET' }; \
    const req = http.request(options, (res) => { \
      if (res.statusCode === 200) { process.exit(0); } else { process.exit(1); } \
    }); \
    req.on('error', () => process.exit(1)); \
    req.end();"

# Запуск
CMD ["node", "index.js"]